version: "3.9"

services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: infinipaper
      POSTGRES_PASSWORD: infinipaper
      POSTGRES_DB: infinipaper
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  grobid:z
    image: grobid/grobid:latest
    ports:
      - "8070:8070"
    environment:
      - GROBID_PORT=8070
    healthcheck:
      test: ["CMD", "wget", "-qO", "-", "http://localhost:8070/api/isalive"]
      interval: 10s
      timeout: 5s
      retries: 12

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile.backend
    env_file:
      - ./backend/.env
    depends_on:
      db: 
        condition: service_healthy
      redis:
        condition: service_started
      grobid:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app/app:rw

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:rw

volumes:
  db_data: